ana felsefesi kod okunabilirliği olan Python programlama dilinin popülaritesinin artma nedenlerini açıklamaya çalışacağım. 

Calismasi yetmez
It's also important to write clean code that is easily understood, even weeks after you've written it.

One way of doing this is to follow the Zen of Python, a somewhat tongue-in-cheek set of principles that serves as a guide to programming the Pythoneer way. Use the following code to access the Zen of Python.


Python Enhancement Proposals (PEPs)
http://www.openbookproject.net/books/bpp4awd/_static/ch10/zen.html
https://www.python.org/dev/peps/pep-0020/#id3


PEP

Python Enhancement Proposals (PEP) are suggestions for improvements to the language, made by experienced Python developers.
PEP 8 is a style guide on the subject of writing readable code. It contains a number of guidelines in reference to variable names, which are summarized here:
- modules should have short, all-lowercase names;
- class names should be in the CapWords style;
- most variables and function names should be lowercase_with_underscores;
- constants (variables that never change value) should be CAPS_WITH_UNDERSCORES;
- names that would clash with Python keywords (such as 'class' or 'if') should have a trailing underscore.

PEP 8 also recommends using spaces around operators and after commas to increase readability.

Some other notable PEPs that cover code style:
PEP 20: The Zen of Python
PEP 257: Style Conventions for Docstrings


https://realpython.com/documenting-python-code/

"""
This is an example of Google style.

Args:
    param1: This is the first param.
    param2: This is a second param.

Returns:
    This is a description of what is returned.

Raises:
    KeyError: Raises an exception.
"""


http://www.openbookproject.net/books/bpp4awd/_static/ch10/zen.html

https://www.reddit.com/r/ProgrammerHumor/comments/98wrr2/at_least_its_not_as_bad_as_java_classes/

https://medium.com/@marilu597/general-coding-guidelines-clean-code-from-day-1-9ab0804e5d91
https://dev.to/duomly/the-best-practices-of-coding-in-python-and-what-to-avoid-3c65

https://www.slidescarnival.com/macmorris-free-presentation-template/3571
https://www.slidescarnival.com/olivia-free-presentation-template/2089

https://www.slidescarnival.com/benedick-free-presentation-template/97

https://slidesgo.com/theme/university-introduction
https://slidesgo.com/theme/tech-newsletter
https://blog.soshace.com/top-18-interview-questions-for-python-developers-theory-and-practice/
https://www.slideshare.net/ChristinaRasimus/the-awesomeness-of-go
https://www.oreilly.com/library/view/the-hitchhikers-guide/9781491933213/ch04.html

http://docs.enthought.com/codetools/tutorial.html
https://lemariva.com/storage/app/media/uploaded-files/pep20_by_example.pdf
https://pep8.org/



